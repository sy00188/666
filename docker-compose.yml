version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: archive_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: archive_management_system
      MYSQL_USER: archive_user
      MYSQL_PASSWORD: archive_pass
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./01_database_init.sql:/docker-entrypoint-initdb.d/01_init.sql
      - ./03_triggers.sql:/docker-entrypoint-initdb.d/03_triggers.sql
      - ./mysql-config:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - archive_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10
      interval: 10s

  # 后端服务 (Spring Boot)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: archive_backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/archive_management_system?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
      SPRING_DATASOURCE_USERNAME: archive_user
      SPRING_DATASOURCE_PASSWORD: archive_pass
      TZ: Asia/Shanghai
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - backend_logs:/app/logs
      - ./upload:/app/upload
    networks:
      - archive_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/captcha"]
      timeout: 10s
      retries: 5
      interval: 30s

  # 前端服务 (Vue.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: archive_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      VUE_APP_API_BASE_URL: http://localhost:8080
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - archive_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 10s
      retries: 3
      interval: 30s

  # Redis 缓存服务 (可选)
  redis:
    image: redis:7-alpine
    container_name: archive_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - archive_network
    command: redis-server --appendonly yes --requirepass redis123456
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: archive_nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "8443:8443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - archive_network
    profiles:
      - production

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

# 网络
networks:
  archive_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16